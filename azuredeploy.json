{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resource_group_name": {
      "type": "string",
      "defaultValue": "default-appservice-module",
      "metadata": {
        "description": "resource_group_name"
      }
    },
    "app_name": {
      "type": "array",
      "defaultValue": [ "app1", "app2" ],
      "metadata": {
        "description": "app_name"
      }
    },
    "app_name_plan": {
      "type": "string",
      "defaultValue": "default-app-name-plan",
      "metadata": {
        "description": "app_name_plan"
      }
    },
    "environment_name": {
      "type": "string",
      "defaultValue": "default-environment",
      "metadata": {
        "description": "environment_name"
      }
    },
    "sku_tier": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "sku_tier"
      }
    },
    "sku_size": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "sku_size"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "tag1": "test1",
        "tag2": "test2"
      },
      "metadata": {
        "description": "tags"
      }
    },
    "app_settings": {
      "type": "object",
      "defaultValue": {
        "tag1": "test1",
        "tag2": "test2"
      },
      "metadata": {
        "description": "app_settings"
      }
    },
    "onpremise-tmp-endpoint": {
      "type": "string",
      "defaultValue": "false",
      "metadata": {
        "description": "onpremise-tmp-endpoint"
      }
    },
    "trafic_manager_profile": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "trafic_manager_profile"
      }
    },
    "app-tmp-endpoint": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "app-tmp-endpoint"
      }
    },
    "dns_url": {
      "type": "string",
      "defaultValue": "example.com",
      "metadata": {
        "description": "dns_url"
      }
    },
    "azure_tmp_weight": {
      "type": "string",
      "defaultValue": "50",
      "metadata": {
        "description": "azure_tmp_weight"
      }
    },
    "onpremise_tmp_weight": {
      "type": "string",
      "defaultValue": "50",
      "metadata": {
        "description": "onpremise_tmp_weight"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "subscription"
      }
    },
    "secret": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "secret"
      }
    },
    "id": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "id"
      }
    },
    "pfxpassword": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "pfxpassword"
      }
    },
    "fqdn": {
      "type": "array",
      "defaultValue": [ "helferapicc-beta.example.com", "helfercc-beta.example.com" ],
      "metadata": {
        "description": "fqdn"
      }
    },
    "dns_ttl": {
      "type": "string",
      "defaultValue": "300",
      "metadata": {
        "description": "dns_ttl"
      }
    },
    "use_32_bit_worker_process": {
      "type": "string",
      "defaultValue": "true",
      "metadata": {
        "description": "use_32_bit_worker_process"
      }
    },
    "path": {
      "type": "string",
      "defaultValue": "/docs/index",
      "metadata": {
        "description": "path"
      }
    },
    "websitetimezone": {
      "type": "string",
      "defaultValue": "UTC",
      "metadata": {
        "description": "websitetimezone"
      }
    },
    "alertReceiver": {
      "type": "string",
      "defaultValue": "me@example.com",
      "metadata": {
        "description": "email to receive alerts"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "regions": "[if(equals(variables('location'), 'westeurope'), 'euw', 'eun')]",
    "app_count": "[length(parameters('app_name'))]",

    "locEnv": "[concat(variables('regions'), '-',parameters('environment_name'))]",
    "serverfarmName": "[concat(parameters('app_name_plan'), '-apps-', variables('locEnv'))]",
    "trafManagerProfileName": "[concat(parameters('app_name_plan'),'-tmp-global-', parameters('environment_name'))]",
    "insightComponentName": "[concat(parameters('app_name_plan'), '-ins-', variables('locEnv'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('serverfarmName')]",
      "tags": "[parameters('tags')]",
      "location": "[variables('location')]",
      "properties": {},
      "sku": {
        "name": "S1",
        "tier": "standard",
        "size": "S1"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "dependsOn": [ "[variables('trafManagerProfileName')]" ],
      "apiVersion": "2015-05-01",
      "location": "[variables('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "Application_Type": "web"
      },
      "name": "[variables('insightComponentName')]"
    },
    {
      "type": "microsoft.insights/alertrules",
      "location": "[variables('location')]",
      "apiVersion": "2016-03-01",
      "name": "[concat('CPU ', variables('insightComponentName'))]",
      "dependsOn": [ "[resourceId('microsoft.insights/components', variables('insightComponentName'))]" ],
      "tags": "[parameters('tags')]",
      "properties": {
        "name": "[concat('CPU ', variables('insightComponentName'))]",
        "isEnabled": true,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[resourceId('microsoft.insights/components', variables('insightComponentName'))]",
            "metricNamespace": null,
            "metricName": "performanceCounter.percentage_processor_time_normalized.value"
          },
          "operator": "GreaterThan",
          "threshold": 85,
          "windowSize": "PT5M"

        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": false,
          "customEmails": [
            "[parameters('alertReceiver')]"
          ]
        }
      }
    },
    {
      "type": "microsoft.insights/alertrules",
      "location": "[variables('location')]",
      "apiVersion": "2016-03-01",
      "name": "[concat('Server response time ', variables('insightComponentName'))]",
      "dependsOn": [ "[resourceId('microsoft.insights/components', variables('insightComponentName'))]" ],
      "tags": "[parameters('tags')]",
      "properties": {
        "name": "[concat('Server response time ', variables('insightComponentName'))]",
        "isEnabled": true,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[resourceId('microsoft.insights/components', variables('insightComponentName'))]",
            "metricNamespace": null,
            "metricName": "request.duration"
          },
          "operator": "GreaterThan",
          "threshold": 1,
          "windowSize": "PT15M"

        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": false,
          "customEmails": [
            "[parameters('alertReceiver')]"
          ]
        }
      }
    },
    {
      "type": "microsoft.insights/alertrules",
      "location": "[variables('location')]",
      "apiVersion": "2016-03-01",
      "name": "[concat('Failed requests ', variables('insightComponentName'))]",
      "dependsOn": [ "[resourceId('microsoft.insights/components', variables('insightComponentName'))]" ],
      "tags": "[parameters('tags')]",
      "properties": {
        "name": "[concat('Failed requests ', variables('insightComponentName'))]",
        "isEnabled": true,
        "condition": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
          "dataSource": {
            "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
            "resourceUri": "[resourceId('microsoft.insights/components', variables('insightComponentName'))]",
            "metricNamespace": null,
            "metricName": "requestFailed.count"
          },
          "operator": "GreaterThan",
          "threshold": 1,
          "windowSize": "PT15M"

        },
        "action": {
          "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
          "sendToServiceOwners": false,
          "customEmails": [
            "[parameters('alertReceiver')]"
          ]
        }
      }
    },
    {
      "type": "Microsoft.Network/trafficManagerProfiles",
      "condition": "[equals(parameters('trafic_manager_profile'), 'true')]",
      "dependsOn": [ "[variables('serverfarmName')]" ],
      "apiVersion": "2017-05-01",
      "location": "global",
      "name": "[variables('trafManagerProfileName')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "trafficRoutingMethod": "Weighted",
        "dnsConfig": {
          "relativeName": "[concat(parameters('app_name_plan'),'-tmp-global-', parameters('environment_name'))]",
          "ttl": "[parameters('dns_ttl')]"
        },
        "monitorConfig": {
          "protocol": "HTTPS",
          "port": "443",
          "path": "[parameters('path')]"
        }
      }
    },
    {
      "apiVersion": "2015-11-01",
      "type": "Microsoft.Network/trafficManagerProfiles/ExternalEndpoints",
      "name": "[concat(variables('trafManagerProfileName'), '/Endpoint', copyIndex())]",
      "condition": "[equals(parameters('app-tmp-endpoint'), 'true')]",
      "dependsOn": [
        "[concat('Microsoft.Network/trafficManagerProfiles/', variables('trafManagerProfileName'))]",
        "[concat(parameters('app_name')[copyIndex()], '-apps-', variables('locEnv'))]"
      ],
      "location": "global",
      "properties": {
        "target": "[concat(parameters('app_name')[copyIndex()], '-apps-', variables('locEnv'))]",
        "endpointStatus": "Enabled"
      },
      "copy": {
        "count": "[variables('app_count')]",
        "name": "app_copy"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "name": "[concat(parameters('app_name')[copyIndex()], '-apps-', variables('locEnv'))]",
      "apiVersion": "2016-08-01",
      "location": "[variables('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarmName'))]",
        "siteConfig": {
          "defaultDocuments": [ "Default.htm", "Default.html", "Default.asp", "index.htm", "index.html", "iisstart.htm", "default.aspx", "index.php", "hostingstart.html" ],
          "netFrameworkVersion": "v4.6",
          "use32BitWorkerProcess": "[parameters('use_32_bit_worker_process')]",
          "appSettings": [
            {
              "name": "AppInsightsInstrumentationKey",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('insightComponentName')), '2014-04-01').InstrumentationKey]"
            },
            {
              "name": "WebsiteTimeZone",
              "value": "[parameters('websitetimezone')]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "hostnameBindings",
          "name": "[parameters('fqdn')[copyIndex()]]",
          "apiVersion": "2016-08-01",
          "location": "[variables('location')]",
          "properties": {},
          "dependsOn": [ "[concat(parameters('app_name')[copyIndex()], '-apps-', variables('locEnv'))]" ]
        }
      ],

      "copy": {
        "count": "[variables('app_count')]",
        "name": "app_copy"
      }
    }
  ],


      "outputs": {
        "region": {
          "type": "string",
          "value": "[variables('regions')]"
        }
      }
    }